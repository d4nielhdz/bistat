program ::= 'Program' id ';' declaracion_variable* definicion_funcion* main
main ::= 'main' '()' '{' estatuto+ '}' 
definicion_funcion ::= 'func' id '(' declaracion_parametro* ')' ':' tipo_retorno declaracion_variable* '{' estatuto* '}'
tipo_retorno ::= tipo | 'void'
declaracion_variable ::= 'var' tipo id ';'
declaracion_parametro ::= 'var' tipo_parametro id ';'
asignacion ::= id '=' (var_cte | asignacion_lista | asignacion_matriz)
asignacion_matriz ::= '[' asignacion_lista (',' asignacion_lista)* ']'
asignacion_lista ::= '[' var_cte (',' var_cte)* ']'
comentario ::= '#' .* '\n'
estatuto ::= ((asignacion | condicion | for | while | funcion_especial | llamada_funcion) ';') | comentario
funcion_especial ::= read | print | list_add | list_pop | length |range | plot | sum | min | prod | avg | mode | median | sin | cos | tan | sort | sqrt | floor | ceil | abs | not
read ::= 'read' '(' id (',' id)* ')'
list_add ::= 'list_add' '(' expresion ',' expresion ')'
list_pop ::= 'list_pop' '(' expresion ')'
length ::= 'length' '(' expresion ')'
range ::= 'range' '(' expresion (',' expresion)? ')'
plot ::= 'plot' '(' expresion ')'
sum ::= 'sum' '(' expresion ')'
min ::= 'min' '(' expresion ')'
prod ::= 'prod' '(' expresion ')'
avg ::= 'avg' '(' expresion ')'
mode ::= 'mode' '(' expresion ')'
median ::= 'median' '(' expresion ')'
sin ::= 'sin' '(' expresion ')'
tan ::= 'tan' '(' expresion ')'
cos ::= 'cos' '(' expresion ')'
sort ::= 'sort' '(' expresion ')'
sqrt ::= 'sqrt' '(' expresion ')'
floor ::= 'floor' '(' expresion ')'
ceil ::= 'ceil' '(' expresion ')'
abs ::= 'abs' '(' expresion ')'
not ::= 'not' '(' expresion ')'
estatuto_anidado ::= ((asignacion | condicion | escritura | while | funcion_especial | llamada_funcion) ';') | comentario
for ::= 'for' '(' id 'in' expresion ')' '{' estatuto_anidado+ '}'
while ::= 'while' '(' expresion ')' '{' estatuto+ '}'
condicion ::= ('if' '(' expresion ')' '{' estatuto+ '}') ('else if' '(' expresion ')' '{' estatuto+ '}')* ('else' '{' estatuto+ '}')?
print ::= 'print' '(' (expresion) ( ',' (expresion) )* ')'
expresion ::= exp (('<' | '>' | '<=' | '>=' | '==' | '!=' | '&&' | '||') exp)?
exp ::= termino (('+' | '-') exp)?
llamada_funcion ::= (id '(' (expresion (',' expresion)*)? ')')
termino ::= factor (('*' | '/' | '%') termino)?
factor ::= [+-]? ('('expresion')' | indexacion | funcion_especial | llamada_funcion | var_cte)
indexacion ::= id '[' expresion ']' ('[' expresion ']')?
tipo ::= ('int' | 'float' | 'sring' | 'bool') cardinalidad?
tipo_parametro ::= ('int' | 'float' | 'sring' | 'bool') cardinalidad_parametro?
cardinalidad_parametro ::= '[' ']' | '[' ']' '[' ']'
cardinalidad ::= '[' cte_i ']' | '[' cte_i ']' '[' cte_i ']'
var_cte ::= cte_str | cte_i | cte_f | id | cte_bool
cte_str ::= '"' [^"]* '"'
cte_f ::= [0-9]+'.'[0-9]+
cte_i ::= [0-9]+
cte_bool ::= [tT][rR][uU][eE] | [fF][aA][lL][sS][eE]
id ::= ('_'| [a-zA-Z] )+[0-9a-zA-Z]*
