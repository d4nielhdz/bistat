Program BasicTests;

var int x;

func recursive_fib(var int n;): int {
  if (n <= 1) {
    return n;
  }
  return recursive_fib(n - 1) + recursive_fib(n - 2);
}

func iterative_fib(var int n;): int 
var int pprev;
var int prev;
var int curr;
var int i;
{
  prev = 0;
  curr = 1;
  i = 1;
  while (i < n) {
    pprev = prev;
    prev = curr;
    curr = pprev + prev;
    i = i + 1;
  }
  return curr;
}

func recursive_fac (var int x;): int {
  if (x == 1) {
    return x;
  }
  return x * recursive_fac(x - 1);
}

func iterative_fac(var int x;): int 
  var int product;
  var int i;
{
  product = 1;
  i = 1;
  while (i <= x) {
    product = product * i;
    i = i + 1;
  }
  return product;
}

func bubbleSort(): void
  var int i;
  var int j;
  var int tmp;
  var int[4] arr;
 {
  i = 0;
  j = 0;
  arr = [4, 6, 1, 2];
  print(arr);
  while (i < 3) {
    j = 0;
    while (j < 3 - i) {
      if (listAccess(arr, j) > listAccess(arr, j + 1)) {
        tmp = listAccess(arr, j);
        listAssign(arr, j, listAccess(arr, j + 1));
        listAssign(arr, j+1, tmp);
      }
      j = j + 1;
    }
    i = i + 1;
  }
  print(arr);
}

main() {
  x = recursive_fib(9);
  print(x);
  x = iterative_fib(9);
  print(x);
  x = recursive_fac(7);
  print(x);
  x = iterative_fac(7);
  print(x);
  bubbleSort();
}